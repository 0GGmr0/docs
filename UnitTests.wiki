= Running Repy Unit Tests =

----
[[TOC(inline)]]
----


[[BR]]
== Overview ==
----
Seattle consists of several different components including, the Repy VM (which executes programs), the node manager (which accepts incoming connections), Seattle standard libraries, and software updater.   There is a separate wiki page that describes how to run the [wiki:UpdaterUnitTests software updater unit tests].  There currently isn't a script that runs all of the unit tests for the Seattle standard libraries (but this is under development).

There are also integration tests, tests for SeattlGENI, and similar other tests which are not covered here.


[[BR]]
== Running the Repy VM tests ==
----
Repy and the unit tests cannot be run straight out of svn.   Please create a new directory which will store the runnable copy of the files (if you use an existing directory, the contents will be erased).   

To run the repy unit tests locally, first navigate to the trunk directory of your svn working directory in a terminal, then execute the following commands:

{{{
python preparetest.py -t /path/to/test/directory
cd /path/to/test/directory
}}}

This will set up the directory with the appropriate files.   To run the tests, type:
{{{
python run_tests.py
}}}
This will start all of the repy unit tests running, and will output which tests pass and fail, and give failure details at the end for the ones that do fail.

[[BR]]
== Running Remotely (obsolete) ==
----
To run the repy unit tests on a remote node, you will need a set of public/private key files generated by seash, as well as the IP address of a node that your key has user access on.  Once you have these things, first run the following command from a terminal, starting in the trunk directory of your svn working directory:

{{{
python preparetest.py -t /path/to/test/directory
}}}

Then make sure your public/private keypair is also copied to /path/to/test/directory.  Then to run the tests, run:

{{{
python start_tests.py [-v] keyname nodeip
}}}

where keyname is the file name of your key (minus the publickey/privatekey part), and nodeip is the IP address of the node you want to run the tests on.  The optional -v option will have failed tests immediately print out their detailed failure information, as well as printing it out at the end, as opposed to just printing all of the error details at the end.

Note that this only runs the repy unit tests that do not have a custom restrictions file.  While if you run start_tests.py with the -o option, it will attempt to run these tests remotely, this is currently undefined.  The reasons for this are because this requires that you actually have owner privileges on the node we are accessing (which at this time is not very convenient to make happen), and it would require a significant amount of customization of the test runner for many of these tests just to make it not crash.  Then there would be a good chance that many of these tests would not be able to run anyway if the chosen node did not have enough resources.  As these tests can be still be run locally, it was determine that it would not be worth the time to find solutions to these issues.

[[BR]]
== Running CPU Throttling Check Locally (advanced) ==
----
To run the repy CPU throttling test locally, first navigate to the trunk directory of your svn working directory in a terminal, then execute the following commands:

{{{
python preparetest.py -t /path/to/test/directory
cd /path/to/test/directory
python run_tests.py -cpu
}}}

This will start the test running, and will output a status report with the results of the test. The effectiveness of CPU throttling is hard to judge into Pass and Fail, so that is left to the users judgement.

[[BR]]
== Running Network Restriction Check Locally (advanced) ==
----
To run the repy network restriction tests locally, first navigate to the trunk directory of your svn working directory in a terminal, then execute the following commands:

{{{
python preparetest.py -t /path/to/test/directory
cd /path/to/test/directory
python run_tests.py -network
}}}

This will start the test running, and will output a status report with the results of the test.


[[BR]]
== Running Threading Error Check Locally (advanced) ==
----


'''Be warned that this test is designed to push the system to its thread limit. This means you may experience system instability. Windows and OSX seem to remain stable, but near the end of the test Linux will exhaust its system wide thread availability.'''

To run the repy threading error test locally, first navigate to the trunk directory of your svn working directory in a terminal, then execute the following commands:

{{{
python preparetest.py -t /path/to/test/directory
cd /path/to/test/directory
python run_tests.py -threaderr
}}}

This will start the test running, and will output a status report with the results of the test. 



[[BR]]
== Running Nodemanager Tests ==
----
To run the node manager unit tests locally, open two shells (or command prompts). Navigate to trunk in each. Create a test directory <test_directory_name> if one is not already there.
On the FIRST command prompt type the following command:
{{{
python preparetest.py -t <test_directory_name>
}}}
The -t flag is required even if you are only planning to run the node manager tests.

On the SECOND command prompt enter the following sequence of commands:
{{{
cd <test_directory_name>
python nminit.py
python nmmain.py
}}}

On the FIRST command prompt, enter the following sequence of commands:
{{{
cd <test_directory_name>
python run_tests.py -n
}}}

<test_name> refers to the name of the test file that is to be run (do not include the .mix extension). To see which tests are available to run navigate to nodemanager\tests in the trunk folder.

Known Issue 1: the test nmtestchangeowner_validsequenceid.py fails since sequence id's are currently broken. 
[[BR]]Known Issue 2: Occasionally the testscript freezes as it is running (no change in status for 3 minutes or more). This is rare and the cause is not yet fully known (appears to be related to connection resets in the node manager). If this occurs, restart the node manager and rerun the run_tests.py script.

[[BR]]
== Running Individual Nodemanager Tests  ==
----
To run the repy unit tests locally, first navigate to the trunk directory of your svn working directory in a terminal. Create a test directory <test_directory_name> if one is not already there. Run:
{{{
python preparetest.py <test_directory_name>
cd <test_directory_name>
python nminit.py
python nmmain.py
}}}

Open a new terminal and navigate to the test directory in the trunk that was used previously. The following command can be used to run a test:
{{{
python repy.py restrictions.test <test_name>.py
}}}
<test_name> refers to the name of the test file that is to be run (do not include the .mix extension). To see which tests are available to run navigate to nodemanager\tests in the trunk folder.

[[BR]]
== Running Nodemanager threading error / restrictions processor check (advanced) ==
----
To run the node manager threading test locally, first navigate to the trunk directory of your svn working directory in a terminal, then execute the following commands:

{{{
python preparetest.py -t /path/to/test/directory
cd /path/to/test/directory
python testnmthreadingerror.py
}}}

This will start the test running, and will output a status report with the results of the test. 
[[BR]]
[[BR]]
