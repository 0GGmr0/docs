= Difference between Repy V1 and Repy V2 =

This page describes following : 

 * Existing features which are available in Repy V1 and modified in Repy V2.

 * Improved features of Repy V2

[[TOC(inline)]]

== Existing features which are available in Repy V1 and modified in Repy V2 ==

=== Printing output to stdout ===

{{{print}}} command in RepyV1 is replaced by {{{log}}} command in Repy V2.

Repy V1
{{{
#!python
    print "By default print adds new line character"
    print "Two string messages" , "can be concatenated using comma(,)"
    print "Two string messages" + " can be concatenated using plus(+) sign too"
    print "Message can be enclosed in double quotes."
    print ("Message can be enclosed in parentheses followed by double quotes too")

Output:
    By default print adds new line character
    Two string messages can be concatenated using comma(,)
    Two string messages can be concatenated using plus(+) sign too
    Message can be enclosed in double quotes.
    Message can be enclosed in parentheses followed by double quotes too
 }}}

Repy V2
{{{
#!python
    log ("log does not add new line character by default.")
    log ("Explicitly line feed character should be used. \n")
    log ("Two string messages" , "can be concatenated using comma(,) \n")
    log ("Two string messages" + " can be concatenated using plus(+) sign too \n")
    log ("Message can be enclosed only within parentheses followed by double quotes")

Output:
    log does not add new line character by default. Explicitly line feed character should be used. 
    Two string messages can be concatenated using comma(,) 
    Two string messages can be concatenated using plus(+) sign too 
    Message can be enclosed only within parentheses followed by double quotes
 }}}

=== Files === 

==== Opening File ====
{{{open}}} command in Repy V1 is replaced by {{{openfile}}} command in Repy V2. 

Repy V1
{{{
#!python
file object = open(file_name [, access_mode])

Parameter details:
 file_name: It is a string value that contains the name of the file that you want to access.
 access_mode: The access_mode determines the mode in which the file has to be opened,
  - r    : Opens file for readonly.
  - r+   : Opens file for read and write both. File would not be created if it does not exist
  - w/w+ : Opens file for read and write both.File would be created if it does not exist
  - a/a+ : Opens file for append.File would be created if it does not exist.
}}}
Repy V2
{{{
#!python
file object =  openfile(file_name,create)
 
Parameter details:
 file_name: It is a string value that contains the name of the file that you want to access.
 create   : It is a bool value, that specifies if the file should be created if it does not exist. If the file  
            exists, this flag has no effect.
 Note: By default each file is opened in both read and write mode.
}}}

==== Writing to the File ====
{{{write}}} command used in Repy V1 to write data to a file, is replaced by {{{writeat}}} in Repy V2

Repy V1
{{{
#!python
fileObject.write("Data to write!!\n")
}}}
Repy V2
{{{
#!python
fileObject.writeat("Data to write!!\n",offset)
  offset: An absolute offset to write data at in the file.
}}}

==== Reading from the file ====
{{{read}}} command used in Repy V1 to read data from a file, is replaced by {{{readat}}} in Repy V2

Repy V1
{{{
#!python
fileObject.read(size)
  size : Optional numeric argument. If size is not specified then
         entire contents of the file are read. If specified size bytes are read and returned. 
}}}
Repy V2
{{{
#!python
fileObject.readat(size,offset)
  size   : Mandatory argument. None, indicates read the entire contents of the file.
  offset : Seek to a specific offset before reading 
}}}

== Improved Features of Repy V2 ==

 * Improved "Write once, run anywhere".

 * Improved performance.
   
 * Simpler API.

 * Better performance isolation.

 * Easier to extend.
 
 * Enhanced Security







 
 