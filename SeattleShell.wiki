= Seash: The Seattle Shell =
Seash is a terminal interface for managing Seattle resources. This page is intended as a short overview of commands that one can run in Seash.

[[TOC(inline)]]

== Starting Seash ==
Seash can be started from the terminal by running the command {{{python seash.py}}}. Once Seash starts, it will print a line that starts with {{{!>}}}, and will wait for you to issue a command.


== Seash Commands ==
If you issue the {{{help}}} command in Seash, you will receive an output that describes all the commands Seash supports. Here's a listing of this output:

{{{
A target can be either a host:port:vesselname, %ID, or a group name.

on target [command]              -- Runs a command on a target (or changes the default)
as keyname [command]             -- Run a command using an identity (or changes the default).
add [target] [to group]          -- Adds a target to a new or existing group 
remove [target] [from group]     -- Removes a target from a group
show                             -- Displays shell state (use 'help show' for more info)
set                              -- Changes the state of the targets (use 'help set')
browse                           -- Find vessels I can control
genkeys fn [len] [as identity]   -- creates new pub / priv keys (default len=1024)
loadkeys fn [as identity]        -- loads filename.publickey and filename.privatekey
list                             -- Update and display information about the vessels
upload localfn (remotefn)        -- Upload a file 
download remotefn (localfn)      -- Download a file 
delete remotefn                  -- Delete a file
run file [args ...]              -- Shortcut for upload a file and start
start file [args ...]            -- Start an experiment
stop                             -- Stop an experiment
split resourcefn                 -- Split another vessel off of each vessel
join                             -- Join vessels on the same node
help [help | set | show ]        -- help information 
exit                             -- exits the shell
}}}

[[BR]]
== Using Modules ==
----
In addition to using built-in Seash commands, additional functionality can be added into Seash by using modules.  More information about specific modules can be found at the [SeashModules Seash Modules page].

=== Current Module Information ===
To view information on all currently installed modules, you can use the {{{show modules}}} command.
{{{
user@ !> help show modules
show modules

Shows information on all installed modules.  Modules will be separated into 
two categories: enabled and disabled.  Each entry will be in the following 
format:
  [module name] - [URL where the module was installed from, if available]

The URL will be missing if the module was installed manually.


user@ !> show modules
Enabled Modules:
geoip - https://seattle.poly.edu/plugins/geoip/

Disabled Modules:
selexor - https://seattle.poly.edu/plugins/selexor/  

}}}
[[BR]]
=== Module-Level Help ===
To view information about a particular module, use the {{{modulehelp modulename}}} command.  This helptext is defined by the module creator.
{{{
user@ !> modulehelp geoip
GeoIP Module

This module includes commands that provide information regarding vessels' geographical 
locations.  To get started using this module, acquire several vessels through the Seattle
Clearinghouse, use the 'browse' command, and then in any group, run either 'show location' 
or 'show coordinates'.


show location    -- Display location information (countries) for the nodes
show coordinates -- Display the latitude & longitude of the node

}}}
[[BR]]
=== Installing/Uninstalling Modules ===
To install a new module, you can use the {{{install}}} command.
{{{
user@ !> help install
install modulename url_to_module

Downloads the specified module as modulename and enables it if possible.  
The module will be automatically updated when you run seash.


user@ !> install selexor https://seattle.poly.edu/plugins/selexor
Module 'selexor' has been successfully installed and enabled.

user@ !> install selexor https://seattle.poly.edu/plugins/selexor
Module 'selexor' already exists.  You can either uninstall it using 'uninstall'
or install it under a different name.

}}}

To uninstall an existing module, you can use the {{{uninstall}}} command.

{{{
user@ !> help uninstall
uninstall modulename

Uninstalls the specified module.  Use with caution, as you cannot undo this action!
You can use 'show modules' to view a list of all installed modules.


user@ !> uninstall selexor
Module 'selexor' has been successfully uninstalled.

user@ !> uninstall selexor
Module 'selexor' is not installed.

}}}

[[BR]]
=== Enabling/Disabling Modules ===
Modules are imported when you initially start seash, but they may not be enabled depending on conflicting modules, you disabled them on a previous run, etc.  To enable a module, use the {{{enable}}} command:
{{{
user@ !> help enable
enable modulename

Enables use of the specified module.  You can only enable modules if they do not
contain commands that conflict with existing commands.


user@ !> enable modulename
user@ !> enable modulename
Module 'modulename' is already enabled.

user@ !> enable conflictingmodule
Module 'conflictingmodule' cannot be enabled due to these conflicting commands:
show info (default)
get (selexor)

user@ !>
}}}

Similarly, you can disable modules using the {{{disable}}} command.  This is useful if you have modules that have conflicting commands.  You can disable a module you're not currently using and enable the new module to use the conflicting command.
{{{
user@ !> help disable
disable modulename

Disables the specified module.  You will no longer be able to access the commands 
that were found in the disabled module until the module is re-enabled.


user@ !> disable modulename
user@ !> disable modulename
Module 'modulename' is not enabled.

user@ !> 
}}}

[[BR]]
== Further Information ==
----
For more information on how to use Seash in practice, refer to the [EducationalAssignments/TakeHome Take Home Assignment].

For more information on how Seash works, refer to the [SeattleShellBackend backend page].