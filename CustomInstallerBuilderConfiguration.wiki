= Configure Your Install =
Now that you have [wiki:CustomInstallerBuilderInstallation installed the Custom Installer Builder dependencies and code], let's configure your instance!

-----
[[TOC(inline)]]
-----


== Create and configure local settings ==
Back in the `custominstallerbuilder` directory, copy the `local_template` folder to `local` (this is where Django will expect the configuration files to live).

{{{
#!sh
$ cd ~/custominstallerbuilder   # Go into the repo we checked out during setup
$ cp -R local_template local
}}}

Edit "local/settings.py" to match your local configuration. This is what is contained in the original file (with omissions):

{{{
#!python
SECRET_KEY = '***** This should be changed to a random string *****'
...
SERVE_STATIC = False
...
BASE_URL = 'http://domain.com/'
...
PROJECT_URL = BASE_URL + 'custominstallerbuilder/'
}}}


Change it to reflect your setup:
{{{
#!python
SECRET_KEY = "Don't dare to think using this as your random string either"
...
SERVE_STATIC = True
...	
BASE_URL = 'http://YOUR-URL:PORT/'
...
PROJECT_URL = BASE_URL
}}}

Specifically,
 * `SECRET_KEY` should be a random string of your own choosing. Do not share it with others!
 * If you are testing locally, use `http://127.0.0.1:PORT/` for the `BASE_URL`. You may use your public facing IP if you want it to be accessible via the internet.
 * `PORT` must be an open port number greater than 1024. For smaller port numbers, administrative privileges (`sudo`) are required. 

Save the file, and you are done with configuring Django for your Custom Installer Builder. Good job!



== Adapt the build scripts ==
Go to the `custominstallerbuilder/DEPENDENCIES/dist` directory. Edit `rebuild_base_installers_for_seattlegeni.sh` to match your local configuration.

Adapt the file names (including full paths) to your softwareupdater's public and private keys. (If you don't have softwareupdater keys yet, see below how to create them.)
{{{
#!sh
PUBLIC_KEY_FILE=/path/to/publickey
PRIVATE_KEY_FILE=/path/to/privatekey
}}}

Here's how to generate a key pair in the correct format. Change to the `repy_runtime` directory previously generated, and run the `generatekeys.py` script:
{{{
#!sh
cd ~/custominstallerbuilder/repy_runtime
python generatekeys.py /path/to/key_file_name 4096
}}}

This generates a keypair consisting of files `key_file_name.publickey` and `key_file_name.privatekey` in the path specified. 4096 is the minimum recommendable length at the time of writing. Change the file mode bits with `chmod` so that the file is not group- nor world-readable, and not writable by anyone.

[[BR]]

Back in `rebuild_base_installers_for_seattlegeni.sh`, remember to update the path-to and name of keyfiles.

Furthermore, the softwareupdater URL must be given:
{{{
#!sh
SOFTWARE_UPDATE_URL=http://blackbox.poly.edu/updatesite/
}}}

Also, change
{{{
#!sh
REPO_PARENT_DIR=/home/cib/custominstallerbuilder/scripts/
}}}

to the location of your `scripts` folder.

You can also change 
{{{
#!sh
BASE_INSTALLER_DIRECTORY=/var/www/dist
BASE_INSTALLER_ARCHIVE_DIR=/var/www/dist/old_base_installers
}}}

to where you would like the base installers located. Just '''make sure that the paths exist'''.

Also change the user name to your Custom Installer Builder user:
{{{
#!sh
USER=cib
}}}

== Everything set up and configured! ==

Continue now to [wiki:CustomInstallerBuilderCustomizationAndBuild making the last changes and building installers...]