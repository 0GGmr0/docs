= Setting up virtual machine = 
This page guides you on how to set up a virtual machine system on a fresh ubuntu machine. This guide is based on installing VMware Server 2 on Ubuntu 11.04, Linux 2.6.38-8-server.


[[TOC(inline)]]

== Introduction ==
Often times it is necessary to set up virtual machines (VM) on a machine in order to run multiple different operating systems as well as multiple instances of a certain type of operating system on a machine. This is useful specially for testing purposes. For our project Seattle, we try to test our software on all the major different operating systems to ensure that there aren't any OS specific bug. In order to do this we have set up VMware (a virtualization software for desktops and servers).

[[br]]
== Getting VMware ==
----
For our purpose we want to setup VMware server, which can be downloaded at the [http://downloads.vmware.com/d/info/datacenter_downloads/vmware_server/1_0 VMware website here]. Once you have hit the 'download' button, it will ask you to either register a new account or log in with an existing account. If you don't have an account please create a new account. '''NOTE: You will be provided with a serial number. This will be needed during installation.'''

[[br]]
== Setup Instructions ==
----

 === Prerequisites ===
 1. Install xinetd
 {{{
root@my-machine# apt-get install xinetd
}}}
 1. Install perl
 {{{
root@my-machine# apt-get install perl
}}}
 1. Install 'make'
 {{{
root@my-machine# apt-get install make
}}}

 === Main Installation Process ===
 1. Create a new user account (for our purpose: virtual_machines)
 1. Copy/download the VMware .gz file to the home directory (/home/virtual_machines)
 1. Extract the VMware .gz file.
 1. At this point we are going to grab a helpful script to help us install vmware.
 1. Run the command:
 {{{
root@my-machine:/home/virtual_machines# wget --no-check-certificate http://codebin.cotescu.com/vmware/vmware-server-2.0.x-kernel-2.6.3x-install.sh

root@my-machine:/home/virtual_machines# mv VMware-server-2.0.2-203138.x86_64.tar.gz raducotescu-vmware-server-linux-2.6.3x-kernel-bb26dce/

root@my-machine:/home/virtual_machines# cd raducotescu-vmware-server-linux-2.6.3x-kernel-bb26dce/

root@my-machine:/home/virtual_machines/raducotescu-vmware-server-linux-2.6.3x-kernel-bb26dce# ./vmware-server-2.0.x-kernel-2.6.3x-install.sh
}}}
 1. At this point the installation should start. It will install all the appropriate library files that is needed if it hasn't already been installed. 
 1. It will prompt you for some information on where to install certain files. Here is an example:
 {{{
Starting VMware Server original install script...
Creating a new VMware Server installer database using the tar4 format.

Installing VMware Server.

In which directory do you want to install the binary files?
[/usr/bin]

What is the directory that contains the init directories (rc0.d/ to rc6.d/)?
[/etc]

What is the directory that contains the init scripts?
[/etc/init.d]

In which directory do you want to install the daemon files?
[/usr/sbin]

In which directory do you want to install the library files?
[/usr/lib/vmware]

The path "/usr/lib/vmware" does not exist currently. This program is going to
create it, including needed parent directories. Is this what you want?
[yes]

In which directory do you want to install the manual files?
[/usr/share/man] /home/virtual_machines/vmware_installation/share/man

The path "/home/virtual_machines/vmware_installation/share/man" does not exist
currently. This program is going to create it, including needed parent
directories. Is this what you want? [yes] yes

In which directory do you want to install the documentation files?
[/usr/share/doc/vmware] /home/virtual_machines/vmware_installation/share/doc

The path "/home/virtual_machines/vmware_installation/share/doc" does not exist
currently. This program is going to create it, including needed parent
directories. Is this what you want? [yes] yes

The installation of VMware Server 2.0.2 build-203138 for Linux completed
successfully. You can decide to remove this software from your system at any
time by invoking the following command: "/usr/bin/vmware-uninstall.pl".

Before running VMware Server for the first time, you need to configure it by
invoking the following command: "/usr/bin/vmware-config.pl". Do you want this
program to invoke the command for you now? [yes] yes

Making sure services for VMware Server are stopped.

Stopping VMware autostart virtual machines:
   Virtual machines                                                   failed
Stopping VMware management services:
   VMware Virtual Infrastructure Web Access
   VMware Server Host Agent                                           failed
Stopping VMware services:
   VMware Authentication Daemon                                        done
   Virtual machine monitor                                             done
}}} 



[[br]]
== Configuring VMware Server ==
----
 1. Go into the directory that you installed VMware server in. [/home/virtual_machines]
 1. cd into where you where you asked to put the binary files in. [/home/virtual_machines/vmware_installation/]
 1. Run the vmware-config.pl file. (Unless you answered yes when the installation file asked weather to launch the vmware-config.pl file or not).
 {{{
root@my-machine:/home/virtual_machines/vmware_installation# perl vmware-config.pl
}}}
 1. This will ask you to read and agree on the End User License. Type in yes after you have read it.
 1. After this the script will go ahead and configure a whole bunch of things and it will regularly prompt you for several things. It is safe to just use all the default values the script provides. Note that this will find an appropriate subnet to use NAT on.
 1. '''IMPORTANT:''' During the installation it will ask you to provide (or use the default) port numbers for http connection and secure http (https) connection. Memorize these port numbers as they will be needed later when configuring the VM through firefox. By default the ports are '''8222''' and '''8333'''
 1. It may also at some point ask you to enter a TCP port. By default this port number is '''902''' 
 1. While its installing, it will ask for your serial number. Provide the serial number that was provided to you through the VMware website.
 1. You should be done configuring the VMware server!

[[br]]
== VMware Management ==
----
The VMware Server management can be accessed through a browser. The next set of steps has been tested with Internet Explorer 8 on Windows 7 machine. Note that on Windows 7 I was unable to use Firefox to run these commands as the VMware Server management page would not load. I was also unable to run it on Chrome, as the VMware Server management requires you to install a certain plugin for the browser which at this point doesn't seem to be available for Chrome.

=== Accessing Server Management Remotely ===
For our purpose we are going to access the VMware Server management service remotely as it is more convenient. In order to do this, we will have to set up ssh tunneling. This will differ on weather you are on Linux/Mac, or on Windows. We will be forwarding the three ports '''8222, 8333,''' and '''902'''. These are the default ports for the management system, unless you changed them during installation of the VMware Server.

==== SSH Tunneling ====

===== '''Linux/Mac''' =====
 1. Open up a terminal.
 1. Type in the command below. For this example lets assume that 'local_machine' is the machine that you are currently working on and 'vmware_machine' is the machine that you have installed the VMware Server on.
 {{{
user@local_machine:~/$ ssh -L 8222:vmware_machine:8222 -L 8333:vmware_machine:8333 -L 902:vmware_machine:902 vmware_machine
}}}
 1. Once you type in the command, it will ask for your login name and password for the vmware_machine. Go ahead and log in.
 1. You should now have ssh tunneling set up for the ports 8222, 8333 and 902.

===== '''Windows''' ===== 
 1. In order to do SSH tunneling on Windows, you will need the program Putty. If you don't have Putty, you can download it [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html here]
 1. Open up Putty and enter in the name of the vmware_machine in the "Host Name (or IP address)" area in the Session category.
 1. Click on the category: Connection->SSH->Tunnels
 1. Now we are going to add the ports for the SSH tunneling. 
 1. Enter in 8222 for the 'Source Port', and vmware_machine:8222 for the 'Destination'. Make sure that 'Local' is selected under the 'Destination'. Add the forwarded port.
 1. Repeat the last step for the ports 8333 and 902.
 1. Make sure to save the session for future connections.
 1. Open the connection and type in your login name and password when the vmware_machine prompts you for it.
 1. You should now have SSH tunneling on your Windows machine!
 1. A graphical guide for port forwarding using Putty can be found [http://thedaneshproject.com/posts/ssh-tunneling-with-putty-linux/ here]




==== After SSH Tunneling ====
 1. Open up a browser (IE8 in this case). Type in the address http://127.0.0.1:8222.
 1. You may be redirected to a secure http page at https://127.0.0.1:8333/ui/
 1. Go ahead and add the exceptions for the SSL. 
 1. It should load the VMware Server management login page asking for your username and password of the VMware administrator.
 1. This username would have been defined when you installed the VMware Server. In our case we had chosen the '''user name: "virtual_machines"'''. The password will be the password for the account virtual_machines on the vmware_machine.
 1. You should be able to log in and be able to start creating and configuring VMs!
 
[[br]]
=== Creating a new VM ===
----
 1. Log in to the VMware Server management page.
 1. On the left hand side of the VMware Server management page, click on the name of the machine under the 'Inventory' section.
 1. You can create a new VM two ways. You can click on the "Create Virtual Machine" link on the right frame in the management page under the "Commands" section, or you can click on the Menu: Virtual Machine-> Create Virtual Machine.
 1. A new window should pop up titled "Create Virtual Machine", which will lead you through creating a VM process. 
 1. Most of the options they provide, you can choose the default with a few exceptions. Below are a list of things you should modify and choose instead of the default value provided.
 1. When they ask for the "Guest Operating System" choose the appropriate OS you want to install on the VM.
 1. In the "Properties" section, when they ask for what kind of "Network Connection" we want, change it from "HostOnly" to "NAT".
 1. For the CD/DVD Drive section, instead of choosing "Use a Physical Drive", choose the "Use an ISO Image" option.
 1. You should now be asked to choose an ISO image. Make sure you already have the proper ISO image in the right directory in the vmware_machine. The directory where you want to store the ISO image is the directory you directed to store the ISO image during installation of the VMware Server. In our case we used the location /home/virtual_machines/VM_files/ (by default it may be at: /var/lib/vmware/Virtual Machines).
 1. Once you have chosen the right ISO image, continue on.
 1. When you are asked about "Floppy Drive", choose "Don't Add a Floppy Drive".
 1. When you are asked about "USB Controller", choose "Don't Add a USB Controller".
 1. After you have verified everything, go ahead and create the VM.
 1. Once you have finished, the VM we just created will show up in the "Inventory" section on the left frame of the server management page under the name of the vmware_machine.
 1. Select the VM that was just created and click on the "Console" tab next to the "Summary" tab in the middle of the management page.
 1. There should be a black page displayed which states that the VM is powered off. 
 1. When you log onto the VMware Server management page for the first time and visit the "Console" section, it may ask you to install a plugin. Go ahead and install the plugin and restart the browser.
 1. Once you are in the "Console" section, power on the VM by clicking on the play button, or under the "Summary" tab in the "Commands" menu, there is a "Power On" command that you can use.
 1. Once you power on the VM and go to the "Console" section, it should say: "Open the console in a new window". Click anywhere on the black screen and a little VMware window should pop up which displays the desktop of the new VM that was created. 
 1. You should be able to install the OS now by following the installation instructions of the operating system.
 1. Once the installation is done, all there is left to do is set up the NAT configuration, so the VM could be accessed from the outside world.

[[br]]
=== Configuring NAT Network for VM ===
----
Configuring the network for each of the VM is pretty straightforward. First find out what the IP address of the new VM that was created is. You can do this by opening up a terminal in the new VM and using the command 'ifconfig' or 'ipconfig' depending on the operating system that was installed. Take note of the IP address and then open up the file /etc/vmware/vmnet8/nat/nat.conf for editing. Under the [incomingtcp] section, forward the appropriate ports. The common ports that you would want to forward are '''80''' and '''22'''. Port 22 will be used for ssh, and port 80 will be used for http access. You might also want to forward port 443, if you want to have secure http (https) access. Below is an example:

The IP address of the VM in this case is 192.168.159.130
{{{
[incomingtcp]

# Forward the three VM ports through real ports of the vmware_machine
30000 = 192.168.159.130:22
30001 = 192.168.159.130:80
30002 = 192.168.159.130:443
}}}

'''Restart VMware after editing the configuration file.''' Before you restart the VMware server, make sure that all the VMs are powered off by powering them off through the VMware management page through the browser. Otherwise the VMware server will not restart properly.
{{{
$> sudo /etc/init.d/vmware restart
}}}
This configuration will forward port 22 of the VM through port 30000 of the vmware_machine, port 80 will be forwarded through port 30001 and port 443 will be forwarded through port 30002. In order to SSH into the machine you can use the command:

{{{
user@local-machine$ ssh -p 30000 username@vmware_machine
}}}
 

[[br]]
=== Cloning a VM ===
----
The VMware Server does not have a cloning mechanism unfortunately. In order to clone a VM, it has to be done manually.


[[br]]
== Known Issues/Problems ==
----
Sometimes a particular VM might become unresponsive or the VM might not have any network connectivity. VMWare has been known to stop working. If this happens then the vmware service needs to be restarted. You can restart it the commands:
{{{
$> sudo /etc/init.d/vmware restart

or

$> sudo service vmware restart
}}}

If you are unable to restart the service with the errors that certain services cannot be stopped, then you might have to forcibly kill some processes by searching for the processes using the command 'ps -ef | grep vm'. If nothing seems to be working and things seem to have gone bad then you might have to reconfigure VMWare by running the script:
{{{
$> sudo /usr/bin/vmware-config.pl
}}}

'''WARNING:''' If you reconfigure VMWare make sure to back things up first. Specially the nat.conf file located at /etc/vmware/vmnet8/nat/nat.conf. Once you have reconfigured VMWare, the individual VMs will be assigned new private IP addresses, so you will have to edit nat.conf and modify the port forwarding section with the new IP addresses.

[[br]]
== Detailed Guide to VMware Server ==
----
A more detailed guide can be found in the [http://www.vmware.com/pdf/vmserver2.pdf VMware Server Documentation]. Feel free to look through it for advanced notes.