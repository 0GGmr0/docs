= Configuring SVN on Windows =
This is a guide on setting up SVN for developers running Windows.

[[TOC(inline)]]


== Prerequisites ==
In order to access the SVN repository you must have a ssh account on `seattle.cs.washington.edu`. To gain access email seattle-devel@cs.

== Get SVN ==
Download the `win32svn` installer from [http://sourceforge.net/projects/win32svn/files/1.6.17/Setup-Subversion-1.6.17.msi/download]

Install it.

=== Configure icon paths ===
The environment variable for the icons is not set by default.

The easiest way to configure it is to simply save the following code as iconv.bat file, and run it.

{{{
SET APR_ICONV_PATH = C:\Program Files\Subversion\iconv
}}}

=== Test Environment variables ===
Now that we've installed svn, we should test that it was installed correctly.

Open up a command prompt (see this [http://www.youtube.com/watch?v=qrQMLOykSH4 video] for details), and type `svn --version`, and hit the `enter` key. The output should be similar to the following:
{{{
C:\Users\User>svn --version

svn, version 1.6.17 (r1128011)

   compiled Jun  2 2011, 23:35:08


Copyright (C) 2000-2009 CollabNet.

Subversion is open source software, see http://subversion.apache.org/

This product includes software developed by CollabNet (http://www.Collab.Net/).
}}}

The next thing to test is that the path to the iconv folder was set correctly. To do that, type `echo %APR_ICONV_PATH%` into the command prompt, and hit `enter`. The output should be similar to the following:
{{{
C:\Users\User> echo %APR_ICONV_PATH%
C:\Program Files\Subversion\iconv
}}}

== Set up SSH keys ==

=== Generate the keys ===
The first step in using SSH keys is to generate the keys. If you've used SSH keys before, you can skip this step.

The easiest way to generate keys on Windows is with `puttygen`. You can download it [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html here].

<Generate key pic>
First, click on `Generate`, and move the mouse around, until enough randomness was generated.

In the upper portion of the window there is a text field labeled `Public key for pasting into OpenSSH authorized_keys file:`. Right click, and select `Select All`, and then right click again and select `Copy`. The content of this text field is '''different''' from what you would get with the `Save public key` button. Do not try to copy this generated public key. ''It wonâ€™t work''.

Paste that text into a new file called `authorized_keys`.

Then, click on the `Save private key` button.

You may get a warning "Are you sure you want to save this key without a passphrase to protect it?". Click Yes.

Save the private Key as `id_rsa`.

=== Upload the keys ===
The next step is to upload your public key to the server. We will be doing this with WinSCP

Download winscp from [http://winscp.net/download/winscp435.zip here]. 

Extract the files, and run `winscp.exe`. Fill in the connection details with the server, your username, and your password:
< winscp connect dialog>

You may get a warning that the host certificate was not in the cache. Click `Yes`.
<winscp warning dialog>

<winscp main dialog>

Create a new folder on the server called `.ssh`.
<new folder dialog>

Click and drag the `authorized_keys` file you made before into the `.ssh` folder.

=== Configure SVN to use the private key ===
http://agateau.wordpress.com/2007/07/03/windows-svnssh-and-the-subversion-command-line-client/
%APPDATA%\Subversion\config
Note slashes

=== Test the keys ===
It is possible to test the keys using plink.

== Checkout Time! ==
Now that

== Possible Errors ==

=== Unable to use key file ===
'''Command''': (co command)

'''Error''': Unable to use key file <Path to file> (OpenSSH SSH-2 private key)

'''Fix''': Check the path in your subversion config to plink.exe
