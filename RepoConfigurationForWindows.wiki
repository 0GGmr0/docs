= Configuring SVN on Windows =
This is a guide on setting up SVN for developers running Windows.

[[TOC(inline)]]


== Prerequisites ==
In order to access the SVN repository you must have a ssh account on `seattle.poly.edu`. To gain access email seattle-devel@cs.

You will need the following programs over the course of this guide:

[http://sourceforge.net/projects/win32svn/files/1.6.17/Setup-Subversion-1.6.17.msi/download win32svn installer][[BR]]
[http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html puttygen and plink][[BR]]
[http://winscp.net/eng/download.php WinSCP][[BR]]

== Get SVN ==
Download the `win32svn` installer from [http://sourceforge.net/projects/win32svn/files/1.6.17/Setup-Subversion-1.6.17.msi/download]

Install it.

=== Configure icon paths ===
The environment variable for the icons is not set by default.

Open up a command prompt (see this [http://www.youtube.com/watch?v=qrQMLOykSH4 video] for details) and type:
{{{
SET APR_ICONV_PATH = C:\Program Files\Subversion\iconv
}}}

=== Test Environment variables ===
Now that we've installed svn, we should test that it was installed correctly.

Open up a command prompt, type `svn --version`, and hit the `enter` key. The output should be similar to the following:
{{{
C:\Users\User>svn --version

svn, version 1.6.17 (r1128011)

   compiled Jun  2 2011, 23:35:08


Copyright (C) 2000-2009 CollabNet.

Subversion is open source software, see http://subversion.apache.org/

This product includes software developed by CollabNet (http://www.Collab.Net/).
}}}

The next thing to test is that the path to the iconv folder was set correctly. To do that, type `echo %APR_ICONV_PATH%` into the command prompt, and hit `enter`. The output should be similar to the following:
{{{
C:\Users\User> echo %APR_ICONV_PATH%
C:\Program Files\Subversion\iconv
}}}

== Set up SSH keys ==

=== Preparing the keys ===

==== Generating new keys ====
The first step in using SSH keys is to generate the keys. If you've used SSH keys before, you can skip this step.

The easiest way to generate keys on Windows is with `puttygen`. You can download it [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html here].

[[Image(Create key.png)]][[BR]]
Click on `Generate`, and move the mouse until enough randomness was generated.

[[Image(puttygen - add comment.png)]][[BR]]
An optional step that can be done is to fill in the `Comment` field with your email address.[[BR]]

In the upper portion of the window there is a text field labeled `Public key for pasting into OpenSSH authorized_keys file:`. Right click, and select `Select All`, and then right click again and select `Copy`. The content of this text field is '''different''' from what you would get with the `Save public key` button. If you use the file from the `Save public key` button ''It will not work''.

Paste that text into a new file called `authorized_keys`.

Then, click on the `Save private key` button.

[[Image(puttygen - no passphrase.png)]][[BR]]
You may get a warning "Are you sure you want to save this key without a passphrase to protect it?". Click Yes.

Save the private Key as `id_rsa.ppk`.

==== Use an existing key ====
It is also possible to use an existing ssh key with putty.

Download puttygen.exe from the Putty website.
Execute puttygen.exe
Click on `File` > `Load Private Key`
Then click on `Save private key`. That will convert the private key into a format `plink` can use.

=== Upload the keys ===
The next step is to upload your public key to the server. We will be doing this with WinSCP

Download winscp from [http://winscp.net/download/winscp435.zip here]. 

Extract the files, and run `winscp.exe`. Fill in the connection details with the server, your username, and your password:[[BR]]
[[Image(winscp - connect dialog.png)]]

You may get a warning that the host certificate was not in the cache. Click `Yes`.[[BR]]
[[Image(winscp - warning dialog.png)]]

You'll then see something like this:[[BR]]
[[Image(WinSCP main dialog.png)]]

Create a new folder on the server called `.ssh`.[[BR]]
[[Image(winscp - Create Folder.png)]]

Click and drag the `authorized_keys` file you made before into the `.ssh` folder.

=== Test the private key ===
You'll need `plink`, a command-line interface to the PuTTY back end. You can download plink [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html here]

Open a command prompt, and run
{{{
c:\path\to\plink.exe -i c:\path\to\id_rsa.ppk user@seattle.poly.edu
}}}

If there are no errors, you'll have shell access to seattle.poly.edu.

=== Configure SVN to use the private key ===
The next step is to configure SVN to use `plink` and the private key you made before.

Open `%APPDATA%\Subversion\config` with a text editor.[[BR]]
On '''XP''' `%APPDATA%` is `C:\Documents and Settings\<Username>\Application Data`[[BR]]
On '''7/Vista''' `%APPDATA%` is `C:\Users\<Username>\AppData\Roaming`[[BR]]

Add the following line to the `[tunnels]` section in the `config` file:
{{{
ssh=c:/path/to/plink.exe -i c:/path/to/id_rsa.ppk
}}}

Note that the backslashes Windows normally uses are replaced with forward slashes. In the svn config files, backslashes are escape characters. In order to put backslashes in the path, they'd each need to be escaped.


== Test SVN ==
Now it is time to verify that SVN can use `plink` to connect to the repository.

Open a command prompt, and run 
{{{
svn ls svn+ssh://USER@seattle.poly.edu/seattle/trunk/
}}}

It should display a list of the files in the repository.

If you got this far, you set up SVN correctly. Congrats!

== Possible Errors ==

=== Can't create tunnel ===
'''Command''': svn ls svn+ssh://USER@seattle.poly.edu/seattle/trunk/

'''Error''': "svn: Can't create tunnel: The parameter is incorrect."

'''Fix''': Check the path in your subversion config to id_rsa.ppk

=== Unable to use key file ===


'''Command''': svn ls svn+ssh://USER@seattle.poly.edu/seattle/trunk/

'''Error''': "Unable to use key file path/to/id_rsa.ppk (unable to open file)"

'''Fix''': In your subversion config, check the path to id_rsa.ppk

== External Sources ==
[http://agateau.wordpress.com/2007/07/03/windows-svnssh-and-the-subversion-command-line-client/][[BR]]
[http://linuxproblem.org/art_9.html]