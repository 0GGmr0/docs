= File API call semantics = 

----
[[TOC(inline)]]
----

[[BR]]
== Introduction and Purpose ==
----

This page is designed to specify, in detail, the behavior of File API calls under various circumstances.  For each call a list of argument and behavioral semantics is provided, along with a snippet of test code that shows how each case is verified -- hopefully in much the same style as the NetworkApiSemantics page.


----



[[BR]]
== fobj.close() ==
----

=== Interacts with: ===

All fobj methods that require a file to be open.

=== Argument Semantics: ===

None.

=== Behavioral Semantics: ===

1

Action: Close is called on an open file object.

Result: The file obj is closed. Read and write operations can no longer be performed.

(tested - fobj_close_basic.py)
Test Snippet:

{{{
fobj = open(filename)
fobj.close()
try:
  fobj.read(1)
except:
  pass
else:
  test_fail()
}}}

2

Action: Close is called on an allready closed file object.

Result: False is returned, no exception occurs.

(tested - fobj_close_duplicate.py)

Test Snippet:

{{{
fobj = open(filename)
fobj.close()
fobj.close()
}}}

3

Action: Close is called and the attempts are made to read or write from the file.

Result: An exception occurs.

(tested under other file_object methods)

----
[[BR]]
== fobj.flush() ==
----

=== Interacts with: ===

All fobj methods that write data into a file.

=== Argument Semantics: ===

None.

=== Behavioral Semantics: ===

1

Action: flush is called on a file object in read-only mode
Result: noop
(tested - file_obj_flush_read_only.py)

Test Snippet:

{{{
fobj = open(filename,'r')
fobj.flush()
}}}

2

Action: flush is called on a file object that has write capability
Result: Buffers are written to disk.
(tested - file_obj_flush_write.py)

Test Snippet:

{{{
fobj = open(filename,mode)
fobj.write(num)
fobj.flush()
reader = open(filename,'r')
if reader.read(1) != num:
  print ' write did not flush to disk on mode: '+mode
}}}

----
[[BR]]
== fobj.next() ==
----

=== Interacts With: ===

fobj.close()
fobj.read()
fobj.readline()
fobj.readlines()

NOTE: using next() in combination with other read methods such as read, readline, or readlines, is not recommended and results in undefined behavior (do we want this?).

=== Argument Semantics: ===

None.

=== Behavioral Semantics: ===

NOTE: behavior of fobj.next() is undefined when the fobj is open for writing. All cases here assume the file is open read-only unless otherwise stated.

1

Action: next is called on a file object to get each line of the file, then next is called one additional time.

Result: Each line of the file is returned. When the additional call to next is made an exception is thrown.
(tested - fobj_next_forloop.py)

Test Snippet:

{{{
fobj = open(filename)
for line in fobj:
  #process each line
  try:
    fobj.next()
  except:
    pass
  else:
    fail('no exception')
}}}

2

Action: A fileobj is used as its own iterator in a for loop.

Result: Each line of the file is returned. An additional call to next outside of the for loop results in an exception.
(tested - fobj_next_linebyline.py)

Test Snippet:

{{{
fobj = open(filename)
for i in range(FILE_LENGTH):
  line = fobj.next()
  #process each line
  try:
    fobj.next()
  except:
    pass
  else:
    fail('no exception')
}}}

----
[[BR]]
== fobj.read(*args) ==
----

=== Interacts With: ===

TODO.

=== Argument Semantics: ===

TODO.

=== Behavioral Semantics: ===

TODO.

----
[[BR]]
== fobj.readline(*args) ==
----

=== Interacts With: ===

TODO.

=== Argument Semantics: ===

TODO.

=== Behavioral Semantics: ===

TODO.

----
[[BR]]
== fobj.readlines(*args) ==
----

=== Interacts With: ===

TODO.

=== Argument Semantics: ===

TODO.

=== Behavioral Semantics: ===

TODO.

----
[[BR]]
== fobj.write(text) ==
----

=== Interacts With: ===

TODO.

=== Argument Semantics: ===

TODO.

=== Behavioral Semantics: ===

TODO.

----
[[BR]]
== fobj.writelines(lines) ==
----

=== Interacts With: ===

TODO.

=== Argument Semantics: ===

TODO.

=== Behavioral Semantics: ===

TODO.